syntax = "proto3";

import "google/protobuf/timestamp.proto";

package contract.v1;

// Negative Risk Market Analysis
message NegRiskMarketAnalysis {
    repeated NegRiskMarket markets = 1;
    repeated ArbitrageOpportunity arbitrage_opportunities = 2;
    repeated NegRiskConversion conversions = 3;
    string total_arbitrage_value = 4;
    uint64 block_number = 5;
    google.protobuf.Timestamp block_timestamp = 6;
}

// Negative Risk Market
message NegRiskMarket {
    string event_id = 1;
    string question = 2;
    bool is_neg_risk = 3;
    bool is_augmented = 4;
    repeated NegRiskOutcome outcomes = 5;
    string total_no_price = 6;  // Sum of all NO prices
    string arbitrage_opportunity = 7;  // 1.00 - total_no_price
    bool has_arbitrage = 8;  // true if arbitrage_opportunity > 0
    google.protobuf.Timestamp created_at = 9;
    uint64 block_number = 10;
}

// Negative Risk Outcome
message NegRiskOutcome {
    string outcome_id = 1;
    string name = 2;
    string yes_price = 3;
    string no_price = 4;
    bool is_placeholder = 5;
    bool is_other = 6;
    string market_id = 7;
}

// Arbitrage Opportunity
message ArbitrageOpportunity {
    string market_id = 1;
    string event_id = 2;
    string total_no_cost = 3;
    string guaranteed_payout = 4;
    string profit = 5;
    string profit_percentage = 6;
    repeated string no_outcomes = 7;  // Which NOs to buy
    google.protobuf.Timestamp detected_at = 8;
    uint64 block_number = 9;
}

// Negative Risk Conversion
message NegRiskConversion {
    string user_address = 1;
    string from_outcome = 2;
    string to_outcome = 3;
    string amount = 4;
    string conversion_rate = 5;
    string transaction_hash = 6;
    google.protobuf.Timestamp timestamp = 7;
    uint64 block_number = 8;
}

// TokenRegistered Events
message TokenRegisteredEvents {
    repeated TokenRegistered token_registered = 1;
}

message TokenRegistered {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes condition_id = 5;
    string token0 = 6;
    string token1 = 7;
}

// NegRisk TokenRegistered Events
message NegRiskTokenRegisteredEvents {
    repeated NegRiskTokenRegistered neg_risk_token_registered = 1;
}

message NegRiskTokenRegistered {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes condition_id = 5;
    string token0 = 6;
    string token1 = 7;
    bool is_neg_risk = 8;
    bool is_augmented = 9;
    string event_id = 10;
}

// OrderFilled Events
message OrderFilledEvents {
    repeated OrderFilled order_filled = 1;
}

message OrderFilled {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes maker = 5;
    bytes taker = 6;
    string maker_asset_id = 7;
    string taker_asset_id = 8;
    string maker_amount_filled = 9;
    string taker_amount_filled = 10;
    string fee = 11;
    bytes order_hash = 12;
}

// NegRisk OrderFilled Events
message NegRiskOrderFilledEvents {
    repeated NegRiskOrderFilled neg_risk_order_filled = 1;
}

message NegRiskOrderFilled {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes maker = 5;
    bytes taker = 6;
    string maker_asset_id = 7;
    string taker_asset_id = 8;
    string maker_amount_filled = 9;
    string taker_amount_filled = 10;
    string fee = 11;
    bytes order_hash = 12;
    bool is_neg_risk = 13;
    string event_id = 14;
    string outcome_type = 15;  // "YES" or "NO"
}

// Fixed Product Market Maker Factory Events
message FpmmFactoryEvents {
    repeated FpmmFactoryCreation factory_creations = 1;
}

message FpmmFactoryCreation {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes fixed_product_market_maker = 5;
    bytes creator = 6;
    repeated bytes condition_ids = 7;
    bytes collateral_token = 8;
    string fee = 9;
    string end_time = 10;
    string question_id = 11;
}

// ERC1155 TransferSingle Events
message Erc1155TransferSingleEvents {
    repeated Erc1155TransferSingle transfer_single = 1;
}

message Erc1155TransferSingle {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes contract_address = 5;
    bytes operator = 6;
    bytes from = 7;
    bytes to = 8;
    string id = 9;
    string value = 10;
}

// ERC1155 TransferBatch Events
message Erc1155TransferBatchEvents {
    repeated Erc1155TransferBatch transfer_batch = 1;
}

message Erc1155TransferBatch {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes contract_address = 5;
    bytes operator = 6;
    bytes from = 7;
    bytes to = 8;
    repeated string ids = 9;
    repeated string values = 10;
}

// ERC20 Transfer Events
message Erc20TransferEvents {
    repeated Erc20Transfer transfer = 1;
}

message Erc20Transfer {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes contract_address = 5;
    bytes from = 6;
    bytes to = 7;
    string value = 8;
}

// Merkle Distributor Events
message MerkleDistributorEvents {
    repeated MerkleDistributorClaimed claimed = 1;
}

message MerkleDistributorClaimed {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes airdrop_recipient = 5;
    string amount = 6;
    string token_address = 7;
}

// CTF Events for P&L Tracking
message CtfEvents {
    repeated Ctf_ConditionPreparation condition_preparations = 1;
    repeated Ctf_ConditionResolution condition_resolutions = 2;
    repeated Ctf_PositionSplit position_splits = 3;
    repeated Ctf_PositionMerge position_merges = 4;
    repeated Ctf_PositionRedeem position_redemptions = 5;
    repeated Ctf_TransferSingle transfer_singles = 6;
    repeated Ctf_TransferBatch transfer_batches = 7;
}

// USDC Events
message UsdcEvents {
    repeated Usdc_Transfer transfers = 1;
    repeated Usdc_Approval approvals = 2;
}

// Dune Compatible P&L Data
message DuneCompatiblePnL {
    repeated UserPnL user_pnls = 1;
    repeated MarketPnL market_pnls = 2;
    repeated GlobalPnL global_pnls = 3;
    repeated TokenHolding token_holdings = 4;
    repeated PriceData price_data = 5;
    repeated MarketMetadata market_metadata = 6;
    repeated UsdcPosition usdc_positions = 7;
    repeated AirdropReward airdrop_rewards = 8;
    repeated ArbitrageOpportunity arbitrage_opportunities = 9;
    string total_users = 10;
    string total_volume = 11;
    string total_profits = 12;
    string total_losses = 13;
    uint64 block_number = 14;
    google.protobuf.Timestamp block_timestamp = 15;
}

// Risk Management Data
message RiskData {
    repeated UserRiskProfile user_risks = 1;
    repeated MarketRiskProfile market_risks = 2;
    repeated GlobalRiskMetrics global_risks = 3;
    repeated RiskAlert active_alerts = 4;
    string total_risk_exposure = 5;
    string system_risk_score = 6;
    uint64 block_number = 7;
    google.protobuf.Timestamp block_timestamp = 8;
}

// CTF Event Messages
message Ctf_ConditionPreparation {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes condition_id = 5;
    bytes oracle = 6;
    bytes question_id = 7;
    uint32 outcome_slot_count = 8;
}

message Ctf_ConditionResolution {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes condition_id = 5;
    bytes oracle = 6;
    bytes question_id = 7;
    uint32 outcome_slot_count = 8;
    repeated string payout_numerators = 9;
    string payout_denominator = 10;
}

message Ctf_PositionSplit {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes stakeholder = 5;
    bytes collateral_token = 6;
    bytes parent_collection_id = 7;
    bytes condition_id = 8;
    repeated string partition = 9;
    string amount = 10;
}

message Ctf_PositionMerge {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes stakeholder = 5;
    bytes collateral_token = 6;
    bytes parent_collection_id = 7;
    bytes condition_id = 8;
    repeated string partition = 9;
    string amount = 10;
}

message Ctf_PositionRedeem {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes redeemer = 5;
    bytes collateral_token = 6;
    bytes parent_collection_id = 7;
    bytes condition_id = 8;
    repeated string index_sets = 9;
    string payout = 10;
}

message Ctf_TransferSingle {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes operator = 5;
    bytes from = 6;
    bytes to = 7;
    string token_id = 8;
    string value = 9;
}

message Ctf_TransferBatch {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes operator = 5;
    bytes from = 6;
    bytes to = 7;
    repeated string token_ids = 8;
    repeated string values = 9;
}

// USDC Event Messages
message Usdc_Transfer {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes from = 5;
    bytes to = 6;
    string value = 7;
}

message Usdc_Approval {
    string evt_tx_hash = 1;
    uint32 evt_index = 2;
    google.protobuf.Timestamp evt_block_time = 3;
    uint64 evt_block_number = 4;
    bytes owner = 5;
    bytes spender = 6;
    string value = 7;
}

// P&L Tracking Messages
message UserPnL {
    string user_address = 1;
    string total_realized_pnl = 2;
    string total_unrealized_pnl = 3;
    string total_volume = 4;
    string total_trades = 5;
    string winning_trades = 6;
    string losing_trades = 7;
    string win_rate = 8;
    google.protobuf.Timestamp last_activity = 9;
    // Enhanced P&L data matching Dune query
    string net_usdc = 10;
    string share_value = 11;
    string trading_pnl = 12;
    string liq_pnl = 13;
    string total_pnl = 14;
    repeated TokenHolding holdings = 15;
    
    // Risk Management Metrics
    RiskMetrics risk_metrics = 16;
    string max_drawdown = 17;
    string current_drawdown = 18;
    string risk_score = 19;
    string exposure_ratio = 20;
    string concentration_risk = 21;
    string volatility = 22;
    string sharpe_ratio = 23;
    string var_95 = 24;
    string expected_shortfall = 25;
    repeated RiskAlert risk_alerts = 26;
    
    // Negative Risk Arbitrage
    repeated ArbitrageOpportunity arbitrage_opportunities = 27;
    string total_arbitrage_profit = 28;
}

message MarketPnL {
    string condition_id = 1;
    string question_id = 2;
    string total_volume = 3;
    string total_trades = 4;
    string total_fees = 5;
    string winning_outcome = 6;
    string resolution_price = 7;
    google.protobuf.Timestamp created_at = 8;
    google.protobuf.Timestamp resolved_at = 9;
}

message GlobalPnL {
    string total_volume = 1;
    string total_trades = 2;
    string total_fees = 3;
    string active_users = 4;
    string active_markets = 5;
    string resolved_markets = 6;
    google.protobuf.Timestamp timestamp = 7;
}

// Enhanced P&L Data Structures
message TokenHolding {
    string token_id = 1;
    string amount = 2;
    string current_price = 3;
    string share_value = 4;
    string condition_id = 5;
    string question = 6;
    google.protobuf.Timestamp last_updated = 7;
}

message PriceData {
    string token_id = 1;
    string price = 2;
    string maker_amount = 3;
    string taker_amount = 4;
    google.protobuf.Timestamp last_trade_time = 5;
    uint64 block_number = 6;
}

message MarketMetadata {
    string condition_id = 1;
    string question_id = 2;
    string question = 3;
    string token0 = 4;
    string token1 = 5;
    google.protobuf.Timestamp created_at = 6;
    uint64 block_number = 7;
}

message UsdcPosition {
    string user_address = 1;
    string net_usdc = 2;
    string total_deposited = 3;
    string total_withdrawn = 4;
    google.protobuf.Timestamp last_activity = 5;
}

message AirdropReward {
    string user_address = 1;
    string token_address = 2;
    string amount = 3;
    string usd_value = 4;
    google.protobuf.Timestamp claimed_at = 5;
    uint64 block_number = 6;
}

// Risk Profile Messages
message UserRiskProfile {
    string user_address = 1;
    RiskMetrics risk_metrics = 2;
    string current_risk_score = 3;
    string max_risk_tolerance = 4;
    string current_exposure = 5;
    string available_margin = 6;
    string liquidation_price = 7;
    repeated RiskAlert active_alerts = 8;
    google.protobuf.Timestamp last_assessment = 9;
}

message MarketRiskProfile {
    string condition_id = 1;
    string market_risk_score = 2;
    string volatility = 3;
    string liquidity_risk = 4;
    string correlation_risk = 5;
    string total_exposure = 6;
    repeated string high_risk_users = 7;
    google.protobuf.Timestamp last_updated = 8;
}

message GlobalRiskMetrics {
    string total_system_exposure = 1;
    string average_risk_score = 2;
    string high_risk_users_count = 3;
    string total_liquidations = 4;
    string risk_fees_collected = 5;
    string system_stability_score = 6;
    google.protobuf.Timestamp timestamp = 7;
}

message RiskMetrics {
    string total_exposure = 1;
    string max_position_size = 2;
    string portfolio_concentration = 3;
    string leverage_ratio = 4;
    string margin_ratio = 5;
    string liquidation_risk = 6;
    string correlation_risk = 7;
    string market_risk = 8;
    string liquidity_risk = 9;
    string operational_risk = 10;
}

message RiskAlert {
    string alert_type = 1;
    string severity = 2;
    string message = 3;
    string value = 4;
    string threshold = 5;
    google.protobuf.Timestamp triggered_at = 6;
    bool acknowledged = 7;
}
